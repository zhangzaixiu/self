<?phpnamespace app\admin\controller;require dirname(dirname(dirname(__DIR__))) . '/vendor/autoload.php';use app\common\model\CustomerModel;use PhpOffice\PhpSpreadsheet\Spreadsheet;use PhpOffice\PhpSpreadsheet\Writer\Xlsx;class CustomerController extends  BaseController{    /**     * 列表页     * @return \think\response\Json|\think\response\View     */    public function index(){        $this->view->engine->layout(true);        $alia = CustomerModel::$alia;        if(\think\facade\Request::isAjax()){            $search = filter_array(input('','','trim'));            $data = CustomerModel::getList($search);            return $data;        }        return view('',['alia'=>$alia]);    }    /**     * 创建用户     */    public function create(){        if(\think\facade\Request::isPost()){            try {                $data = input('post.','','trim');                $this->validate($data, 'Customer.create');                $data['password'] = md5(md5('888888'));                $customer = new CustomerModel($data);                if(!$customer->save()){                    throw new \think\Exception('添加用户失败');                }                $result['msg'] = '添加用户成功';                $result['success'] = true;                return json($result);            } catch (\Exception $e) {                return json(['success' => false, 'msg' => $e->getMessage(), 'data' => []]);            }        }    }    /**     * 重置密码     * @return \think\response\Json     */    public function reset()    {        try {            $id = input('id');            if(empty($id)){                throw new \think\Exception('错误请求');            }            $customer = CustomerModel::get($id);            if(empty($customer)){                throw new \think\Exception('用户不存在');            }            $password = md5(md5('888888'));            if(!$customer->force()->save( ['id'=>$id,'password'=>$password])){                throw new \think\Exception('操作失败');            }            return json(['success' => 1, 'msg' => '操作成功']);        } catch (\Exception $e) {            return json(['success' => 0, 'msg' => $e->getMessage()]);        }    }    /**     * 冻结用户     * @return \think\response\Json     */    public function freeze()    {        try {            $id = input('id');            if(empty($id)){                throw new \think\Exception('错误请求');            }            $customer = CustomerModel::get($id);            if(empty($customer)){                throw new \think\Exception('用户不存在');            }            if(!$customer->force()->save( ['id'=>$id,'status'=>2])){                throw new \think\Exception('操作失败');            }            return json(['success' => 1, 'msg' => '操作成功']);        } catch (\Exception $e) {            return json(['success' => 0, 'msg' => $e->getMessage()]);        }    }    /**     * 解冻用户     * @return \think\response\Json     */    public function unfreeze()    {        try {            $id = input('id');            if(empty($id)){                throw new \think\Exception('错误请求');            }            $customer = CustomerModel::get($id);            if(empty($customer)){                throw new \think\Exception('用户不存在');            }            if(!$customer->force()->save( ['id'=>$id,'status'=>1])){                throw new \think\Exception('操作失败');            }            return json(['success' => 1, 'msg' => '操作成功']);        } catch (\Exception $e) {            return json(['success' => 0, 'msg' => $e->getMessage()]);        }    }    /**     * 导出excel     */    public function export()    {        $spreadsheet = new Spreadsheet();        $sheet = $spreadsheet->getActiveSheet();        $sheet->setCellValue('A1', 'Welcome to Helloweba.');        $writer = new Xlsx($spreadsheet);        $writer->save('hello.xlsx');//        try {//            $postData = array_filter(input('', null, 'trim'));//            //查询条件//            $list = CustomerModel::getList($postData,'mobile,name,type,source,status,create_time');////            var_dump($list);die;////            vendor("PHPExcel");////            vendor("PHPExcel.Writer.Excel2007");////            vendor("PHPExcel.IOFactory");////////            //列名////            $header = ['联系方式', '用户名称', '类型', '来源', '状态','创建时间'];////            if (!empty($list)) {////                $name_list =[];////                $field = ['add_time','mobile','name','type_alias','is_freeze_alias'];////                array_walk($list, function($value, $key) use (&$name_list ,$field){////                    foreach ($field as $val){////                        $name_list [$key][$val] = $value[$val];////                    }////                });////                getExcel("平台用户表", $header, $name_list);////            } else {////                return view('layout/message',['msg'=>'没有相关数据']);////            }//        }catch(\Exception $e) {//            c_Log($e);//            return view('layout/message',['msg'=>$e->getMessage(),'code'=>$e->getCode()]);//        }    }}