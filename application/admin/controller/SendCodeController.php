<?phpnamespace app\admin\controller;require '../extend/alsmsdemo/api_demo/SmsDemo.php';use think\Controller;use think\facade\Env;use alsmsdemo\api_demo\SmsDemo;class SendCodeController extends Controller{    /**     *发送验证码     * @param $mobile     * @param int $code_length     * @param string $tplId     * @return array|\think\response\Json     */    public function sendCode(){        try {            $mobile = input('mobile');            $code_length = 4;            $tplId = 'SMS_140721604';            $validate = $this->checkMobile($mobile);            if($validate !== true){                throw new \think\Exception($validate);            }            $code = $this->createCode($code_length);            $smsRes = self::alsms($tplId, $mobile, ['code' => $code]);            if($smsRes['code'] == 1){                cache('sms_code_'.$mobile,['code'=>$code,'time'=>time()+1800]);                //记录发送日志//                $logRes = saveLog('6100000','用户获取验证码'.$mobile,0, 'smsLog', 0,0,$code);//                if ($logRes['code'] == 0) {//                    throw new \think\Exception("操作记录失败");//                }                return array('code'=>1,'msg'=>'短信发送成功');            }else{                return array('code'=>0,'msg'=>'短信发送失败，请稍后再试');            }        }catch(\Exception $e){//            c_Log($e);            return array('code'=>0,'msg'=>$e->getMessage());        }    }    /**     * @parmas $length 长度     * @return 随机数字 暂时用来生产验证码     */    public function createCode($length)    {        $chars_array = array(            "0", "1", "2", "3", "4", "5", "6", "7", "8", "9",        );        $charsLen = count($chars_array) - 1;        $outputstr = "";        for ($i=0; $i<$length; $i++)        {            $outputstr .= $chars_array[mt_rand(0, $charsLen)];        }        return $outputstr;    }    /**     * 核对验证码     * @params $mobile     * @params $code     * @return bool     */    public static function checkMobileCode($mobile,$code){        $trueCode =cache('sms_code_'.$mobile);        if(empty($trueCode)){            return ['code'=>0,'msg'=>'验证码不存在'];        }        //判断下验证码是否过期(暂定位30分钟)        if(time() > $trueCode['time']){            return ['code'=>0,'msg'=>'验证码已经过期'];        }        if($code == $trueCode['code']){           return ['code'=>1];        }        return ['code'=>0,'msg'=>'验证码错误'];    }    /**     * 验证手机号格式     * @param $value     * @return bool|string     */    public function checkMobile($value){        $isMobile="/^((\+?86)|(\(\+86\)))?(13[0123456789][0-9]{8}|15[0123456789][0-9]{8}|17[0123456789][0-9]{8}|18[0123456789][0-9]{8}|147[0-9]{8}|1349[0-9]{7})$/";        if(!preg_match($isMobile,trim($value))){            return '手机号码格式错误';        }else{            return true;        }    }    /**     * 阿里云最新短信发送接口     * @author  江城子     * @param $tplId 发送消息的模板ID，一般写在config配置文件里     * @param $mobile 要发送的电话号码， 多个电话可以是数组或者以逗号隔开的字符串     * @param $data  要发送的消息，格式根据模板配置，如短信验证码  data = array('code'=>'2948');     * @return array  返回一个数组，如果code值为1，说明发送成功，如果为0，说明发送失败。     */     public static function alsms($tplId, $mobile, $data)    {        $signname = '壹能众创云平台';        if (empty($tplId)) {            return array('code' => '0', 'msg' => '短信模板不能为空', 'data' => array());        }        if (empty($mobile)) {            return array('code' => '0', 'msg' => '电话号码不能为空', 'data' => array());        } elseif (is_array($mobile)) {            //如果是数组，则转换成用逗号隔开的字符串            $mobile = implode(",", $mobile);            $mobile = trim($mobile, ",");        } else {            $mobile = trim($mobile);        }        if (empty($data)) {            return array('code' => '0', 'msg' => '短信数据不能为空', 'data' => array());        } else {            //把数据处理一遍，过滤掉特殊字符 【、】、[、]            $search = array("【", "】", "[", "]");            $replace = array("", "", "", "");            foreach ($data as $key => $value) {                $data[$key] = str_replace($search, $replace, $value);            }        }//        require Env::get('EXTEND_PATH').'alsmsdemo/api_demo/lib/SmsDemo.php';////        import//        import('alsmsdemo.api_demo.SmsDemo', Env::get('EXTEND_PATH'));        $response = SmsDemo::sendSms($signname, $tplId, $mobile, $data, '');        if ($response->Code == 'OK') {            return array('code' => '1', 'msg' => '发送成功', 'data' => array());        } else {            //#todo  发送失败做日志记录            return array('code' => '0', 'msg' => $response->Message, 'data' => array());        }    }}