<?phpnamespace app\admin\controller;use app\common\model\SysFileModel;use think\Controller;use think\Db;class UploadController extends Controller{    //上传    public function ajaxUploads()    {        try {            $validate = [];            if (input("ext")) {                $validate['ext'] = input("ext");            }            if (input("ext")) {                $validate['size'] = input("size") * 1024 * 1024;            }            $directory = input("dir") ? input("dir") : "default";            $tmppath = "/files/" . $directory;            $files = request()->file();            if (empty($files)) {                return json(['code' => 0, 'msg' => '文件上传失败']);            }            Db::startTrans();            $result = ['code'=>1];            $rich_text = ['data'=>[],'errno'=>0];            $i = 0;            foreach ($files as $file) {                $savename = session("userId") . "-" . time() . "-" . rand(1, 100000);                $info = $file->validate($validate)->move(\think\facade\Env::get('ROOT_PATH') . 'public' . $tmppath, $savename);                if(!$info){                    throw new \think\Exception($file->getError());                }                $name = $info->getInfo();                $model = new SysFileModel();                $fileName = $name['name'];                $model->name = $fileName;                $model->save_path = $tmppath . '/' . $info->getFilename();                $model->save_name = $info->getFilename();                $model->exts = $info->getExtension();                $model->size = $info->getSize();                $model->user_id = session("userId");                if ($model->save()) {                    if($directory == 'rich_text'){                        $rich_text['data'][$i] = $model->save_path;                    }else{                        $result['data'][$i]["id"] = $model->id;                        $result['data'][$i]["path"] = $model->save_path;                        $result['data'][$i]["fileName"] = $fileName;                    }                    $i++;                } else {                    throw new \think\Exception('文件保存失败');                }            }            Db::commit();            if($directory == 'rich_text'){                return json($rich_text);            }else{                return json($result);            }        }catch (\Exception $e){            Db::rollback();            if($directory == 'rich_text'){                return json(['msg' => $e->getMessage(),'errno'=>1]);            }else{                return json(['code' => false, 'msg' => $e->getMessage()]);            }        }    }}