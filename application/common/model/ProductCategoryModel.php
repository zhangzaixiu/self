<?phpnamespace app\common\model;class ProductCategoryModel extends BaseModel{    /**     *获取列表信息     * @param $input     * @param string $field     * @return array     */    public static function getList($input,$field=''){        try{            $field = !empty($field)?$field:'*';            $category = self::field($field);//            if(isset($input['status'])){//                $customer->where(['status'=>$input['status']]);//            }//            if(isset($input['source'])){//                $customer->where(['source'=>$input['source']]);//            }//            if(isset($input['type'])){//                $customer->where(['type'=>$input['type']]);//            }//            if(isset($input['info'])){//                $customer->where('name|mobile','like','%'.$input['info'].'%');//            }            $category->order(['parent_id'=>'asc','sort'=>'desc']);            $rows = $category->select();            return ['code'=>1,'rows'=>$rows];        }catch(\Exception $e) {            return array('code' => 0, 'rows' => [], 'msg' => $e->getMessage());        }    }    public function child()    {        return $this->hasOne(self::class,'parent_id','id');    }////    public function children(){////    }   public static function tree($input){        $data = self::getList($input);        $row = $data['rows']->toArray();        $new = [];        foreach($row as $k => &$v){            if($v['parent_id'] != 0){                $new[$v['parent_id']]['children'][$v['id']] = $v;            }else{                $new[$v['id']] = $v;            }        }        return $new;    }    public static function treeView($data){       $new = [];    }}