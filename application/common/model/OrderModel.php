<?phpnamespace app\common\model;use app\common\ButtonElement;class OrderModel extends BaseModel{    public function getStatusAttr($value,$data)    {        $status = [1=>'待支付',2=>'已支付',3=>'待处理',4=>'处理中',5=>'已完成'];        return isset($status[$data['status']])? $status[$data['status']]:'';    }    public function getPayTypeAttr($value,$data)    {        $status = [1=>'支付宝',2=>'微信'];        return isset($status[$data['pay_type']])?$status[$data['pay_type']]:'';    }    public function getOperateAttr($value,$data){        $operation =  [            'show'=>ButtonElement::showLink(url('admin/order/detail',['id'=>$data['id']])),        ];        return $operation;    }    public static function getList($input){        try{            $default = [                'sort'=>'id',                'order'=>'desc',                'offset'=>0,                'limit'=>null,            ];            $input = array_merge($default,$input);            $product = self::field('a.*,b.mobile customer_mobile')->alias('a')->leftJoin('customer b','a.customer_id = b.id');            if(isset($input['id'])){                $product->where('id',"=",$input['id']);            }            if(isset($input['info'])){                $product->whereLike('a.order_sn|b.mobile',"%".$input['info']."%");            }            $product->limit($input['offset'],$input['limit']);            $rows = $product->select();            foreach ($rows as $k => &$v){               $v['operation'] = implode(' ',$v->operate);            }            $count = $product->count();            return ['code'=>1,'total' => $count,'rows'=>$rows];        }catch(\Exception $e) {            return array('code' => 0, 'rows' => [], 'msg' => $e->getMessage());        }    }    /**     * app接口     * author: zzx     * Date: 2018/11/19 0019     * Time: 09:43     * @param $input     * @return array     */    public static function appList($input){        try{            $default = [                'sort'=>'a.id',                'order'=>'desc',                'offset'=>0,                'limit'=>null,            ];            $input = array_merge($default,$input);            $attr = self::field('*')->alias('a');            if(isset($input['order_id'])){                $attr->where('a.id',"=",$input['order_id']);            }            if(isset($input['customer_id'])){                $attr->where('a.customer_id',"=",$input['customer_id']);            }            if(isset($input['pageNo'])){                $input['offset'] =($input['pageNo']-1)*10;            }            $attr->order($input['sort'],$input['order']);            $attr->limit($input['offset'],$input['limit']);            $rows = $attr->select();            foreach($rows as $k => &$v){                $order_attr = OrderAttrModel::where(['order_id'=>$v['id']])->field('id product_id,product_name,img,price product_attr_price,count')->select();                $v['order_attr'] = $order_attr->toArray();            }            $count = $attr->count();            if($input['limit']){                $pages = ceil($count/$input['limit']);            }else{                $pages = 1;            }            return ['code'=>1,'pages' => $pages,'pageList'=>$rows];        }catch(\Exception $e) {            return ['code' => 0, 'msg' => $e->getMessage()];        }    }}