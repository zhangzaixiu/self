<?phpnamespace app\common\model;class ProductCategoryAttrModel extends BaseModel{    public static function getCategoryAttr($category_id){        return self::where(['category_id'=>$category_id])->order(['sort'=>'asc'])->column('name');    }    public static function getList($input){        try{            $default = [                'sort'=>'sort',                'order'=>'asc',                'offset'=>0,                'limit'=>null,            ];            $input = array_merge($default,$input);            $attr = self::field('*');            if(isset($input['category_id'])){                $attr->where('category_id','=',$input['category_id']);            }            $attr->order($input['sort'],$input['order']);            $attr->limit($input['offset'],$input['limit']);            $rows = $attr->select();            if(isset($input['product_id'])){                $product_attr = ProductAttrModel::where(['product_id'=>$input['product_id']])->select();                if(!empty($product_attr)){                    foreach ($rows as $key => &$row){                        $row['value'] = '';                        foreach ($product_attr as $k => $v){                            if($row['id']  == $v['category_attr_id']){                                $row['value']  = $v['value'];                            }                        }                    }                }            }            $count = $attr->count();            return ['code'=>1,'total' => $count,'rows'=>$rows];        }catch(\Exception $e) {            return array('code' => 0, 'rows' => [], 'msg' => $e->getMessage());        }    }}