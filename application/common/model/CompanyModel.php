<?phpnamespace app\common\model;use app\common\ButtonElement;class CompanyModel extends BaseModel{    public function getAuditStatusAttr($value,$data)    {        $status = [1=>'待审核',2=>'已通过',3=>'已拒绝'];        return $status[$data['audit_status']];    }    public function getStatusAttr($value,$data)    {        $status = [1=>'正常',2=>'停止'];        return $status[$data['status']];    }    public function getOperateAttr($value,$data){        $operation =  [            'show'=>ButtonElement::showLink(url('admin/company/detail',['id'=>$data['id']])),        ];      if($data['audit_status'] == 2 && $data['status'] == 1){          $operation['status'] = ButtonElement::confirmButton(url('admin/company/status',['id'=>$data['id'],'status'=>2]),'确定停止『'.$data['name'].'』吗?','停止','warning','wb-pause');      }        if($data['audit_status'] == 2 && $data['status'] == 2){            $operation['status'] = ButtonElement::confirmButton(url('admin/company/status',['id'=>$data['id'],'status'=>1]),'确定恢复『'.$data['name'].'』吗?','恢复','success','wb-play');        }        return $operation;    }    /*     * 下拉选择     */    public static function getSelectAttr($input = []){        $list = self::getList($input);//        var_dump($list);die;        if($list['code'] == 0){            return [];        }        return $list['rows']->toArray();    }    public static function getList($input,$field=''){        try{            $default = [                'sort'=>'id',                'order'=>'desc',                'offset'=>0,                'limit'=>null,            ];            $field = !empty($field)?$field:'*';            $input = array_merge($default,$input);            $company = self::field($field);            if(isset($input['info'])){                $company->whereLike('name|linkman|mobile',"%".$input['info']."%");            }            $company->order($input['sort'],$input['order']);            $company->limit($input['offset'],$input['limit']);            $rows = $company->select();            foreach ($rows as $k => &$v){               $v['operation'] = implode(' ',$v->operate);            }            $count = $company->count();            return ['code'=>1,'total' => $count,'rows'=>$rows];        }catch(\Exception $e) {            return array('code' => 0, 'rows' => [], 'msg' => $e->getMessage());        }    }    public static function getDetail($id){        $company = self::where(['id'=>$id])->with(['license_file','logo_file','enter_category'])->find();        return $company;    }    public function licenseFile()    {        return $this->hasOne(SysFileModel::class,'id','license')->bind([            'license_path'=>'save_path',        ]);    }    public function enterCategory()    {        return $this->hasOne(EnterCategoryModel::class,'id','category_id')->bind([            'category_name'=>'name',        ]);    }    public function logoFile()    {        return $this->hasOne(SysFileModel::class,'id','logo')->bind([            'logo_path'=>'save_path',        ]);    }}