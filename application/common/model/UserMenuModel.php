<?phpnamespace app\common\model;use think\facade\Cache;class UserMenuModel extends BaseModel{    /**     * 获取menu缓存     * @return mixed     */    public  static function getMenuCache($module = 'admin')    {        Cache::rm($module.'_user_menu');  //删除缓存        $menu = Cache::get($module.'_user_menu');        if(empty($menu)){            $menu = Cache::remember($module.'_user_menu',function()use ($module){                $rlt =UserMenuModel::where('model', $module)->order(['level'=>'asc','sort'=>'desc'])->select();                return $rlt;            });        }        return $menu;    }    /**     * 获取当前菜单     * @return array     */    public  static function getCurrentMenu($module = 'admin'){        $param = request()->param();        $path = request()->path();        return self::getMenuByUrl($path,$param,$module);    }    /**     * 根据url获取菜单     * @param $path     * @param array $param     * @return array     */    public static function getMenuByUrl($path,$param =[],$module = 'admin'){        $menu = self::getMenuCache($module);        if(empty($menu)){            return [];        }        foreach ($menu as $k => $v){            if($v['url'] == $path){                if(empty($v['param'])){                    return $v;                }else{                    $flag = 1;                    $menu_param = explode(',',$v['param']);                    foreach ($menu_param as $val){                        $value = explode('=',$val);                        if(!(array_key_exists($value[0],$param) && $param[$value[0]] == $value[1])){                            $flag = 0;                            break;                        }                    }                    if($flag){                        return $v;                    }                }            }        }        return [];    }}